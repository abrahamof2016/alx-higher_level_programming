Test module
===================

import module to be tested.

>>> add_integer = __import__('0-add_integer').add_integer

>>> print(add_integer(1, 2))
3

>>> print(add_integer(100, -2))
98

>>> print(add_integer(2))
100

>>> print(add_integer(100.3, -2))
98

>>> print(add_integer(4, "School"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/add_integer.py", line 20, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> print(add_integer(None))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")

>>> print (add_integer(2, float("NaN")))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/add_integer.py", line 24, in add_integer
    b = int(b)
ValueError: cannot convert float NaN to integer

>>> print(add_integer(float("NaN"), 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/add_integer.py", line 22, in add_integer
    a = int(a)
ValueError: cannot convert float NaN to integer
